[{"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\index.js":"1","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\App.js":"2","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\InfoBox.js":"3","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\Map.js":"4","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\Table.js":"5","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\utils\\util.js":"6","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\LineGraph.js":"7"},{"size":221,"mtime":1610348666190,"results":"8","hashOfConfig":"9"},{"size":4739,"mtime":1610390339069,"results":"10","hashOfConfig":"9"},{"size":739,"mtime":1610386292260,"results":"11","hashOfConfig":"9"},{"size":686,"mtime":1610390718817,"results":"12","hashOfConfig":"9"},{"size":445,"mtime":1610388094883,"results":"13","hashOfConfig":"9"},{"size":2303,"mtime":1610390431675,"results":"14","hashOfConfig":"9"},{"size":2303,"mtime":1610387176661,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cvsv4e",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\index.js",[],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\App.js",[],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\InfoBox.js",[],["32","33"],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\Map.js",[],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\Table.js",[],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\utils\\util.js",[],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\React Project\\Covid Tracker\\covid_tracker\\src\\components\\LineGraph.js",["34"],"import React, { useState, useEffect } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {buildChartData} from '../utils/util';\r\nimport numeral from 'numeral';\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    // includes a doller sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\nfunction LineGraph({casesTypes, ...props}) {\r\n    const [data, setData] = useState({});\r\n\r\n    //https://disease.sh/v3/covid-19/historical/all?lastdays=30\r\n\r\n    useEffect(async () => {\r\n        await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log('LINEGRAPH >>>', data);\r\n                let chartData = buildChartData(data, casesTypes);\r\n                setData(chartData);\r\n            })\r\n    }, [casesTypes]);\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {data?.length > 0 && (\r\n                <Line \r\n                    options={options}\r\n                    data={{\r\n                        datasets: [{\r\n                            backgroundColor: \"lightGrey\",\r\n                            borderColor: \"lightBlue\",\r\n                            data: data\r\n                        }]\r\n                }} />\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineGraph;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":56,"column":15,"nodeType":"41","endLine":64,"endColumn":6},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]